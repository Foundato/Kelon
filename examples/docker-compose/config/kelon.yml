apis:
  # Route all requests starting with /api/mysql to mysql database
  - path-prefix: /api/mysql
    datastores:
      - mysql
    mappings:
      - path: /apps/.*                   # Matches [GET,POST,PUT,DELETE,PATCH] /api/mysql/apps/.*
        package: applications.mysql
      - path: /apps/[\d]+               # Matches [GET,POST,PUT,DELETE,PATCH] /api/mysql/apps/[\d]+
        package: applications.mysql
      - path: /apps/[\d]+               # Only matches GET /api/mysql/apps/[\d]+
        package: applications.mysql
        methods:
          - GET
      - path: /.*
        package: test
  # Route all requests starting with /api/mongo to MongoDB
  - path-prefix: /api/mongo
    datastores:
      - mongo
    mappings:
      - path: /apps/.*
        package: applications.mongo
  # Route all requests staring with /api/pure to no Datastore without authentication
  - path-prefix: /api/pure
    authentication: false
    mappings:
      - path: /apps/.*
        package: applications.pure
  # Route all requests starting with /api/mixed to MongoDB and Postgres
  - path-prefix: /api/mixed
    datastores:
      - mongo
      - pg
    authentication: false
    mappings:
      - path: /apps/.*
        package: applications.mixed
  # All other requests are routed to postgres
  - path-prefix: /api/.*?
    datastores:
      - pg
    mappings:
      - path: /apps/.*
        package: applications.pg

# Datastores to connect to
datastores:
  mysql:
    type: mysql
    connection:
      host: mysql
      port: 3306
      database: appstore
      user: You
      password: SuperSecure
    metadata:
      maxIdleConnections: 5
      maxOpenConnections: 10
      connectionMaxLifetimeSeconds: 1800
      telemetryName: Datasource
      telemetryType: MySQL

  pg:
    type: postgres
    connection:
      host: postgres
      port: 5432
      database: appstore
      user: You
      password: SuperSecure
      sslmode: disable
    metadata:
      maxIdleConnections: 5
      maxOpenConnections: 10
      connectionMaxLifetimeSeconds: 1800
      telemetryName: Datasource
      telemetryType: PostgreSQL

  mongo:
    type: mongo
    connection:
      host: mongo
      port: 27017
      database: appstore
      user: You
      password: SuperSecure
    metadata:
      telemetryName: Datasource
      telemetryType: MongoDB

# Entity-Schemas define the structure of the entities of one schema inside a datastore
entity_schemas:

  mysql:                                # Target datastore
    appstore:                           # Target schema
      entities:                         # List of all entities of the schema
        - name: users
        - name: app_rights
        - name: apps
        - name: app_tags
        - name: tags

  pg:
    appstore:
      entities:
        - name: users
          alias: pg_users
        - name: app_rights
          alias: pg_app_rights
        - name: apps
          alias: pg_apps
        - name: app_tags
          alias: pg_app_tags
        - name: tags
          alias: pg_tags

  mongo:
    appstore:
      entities:
        - name: users
        - name: apps
          entities:
            - name: rights
              entities:
                - name: user
                  alias: users

# JWT Authenticator config
jwt:
  example:
    jwks_urls:
      - "file:///jwks/jwks-hs.json"
    jwks_max_wait: 100ms
    jwks_ttl: 30m
    target_audience:
      - "aud-1"
      - "aud-2"
    trusted_issuers:
      - "iss-1"
      - "iss-2"
    allowed_algorithms:
      - "HS256"
    required_scopes:
      - "required"
    scope_strategy: "exact"

opa:
  labels:
    app: Kelon
    region: europe-west3
    environment: development

  decision_logs:
    console: true
    reporting:
      min_delay_seconds: 300
      max_delay_seconds: 600

  default_decision: /http/authz/allow
